# Multi-stage Dockerfile for Next.js apps (admin & app)
ARG APP_NAME=admin

FROM node:20-slim as base

# Install dependencies only when needed
FROM base as deps
ARG APP_NAME
WORKDIR /app

# Install dependencies
COPY web/${APP_NAME}/package*.json ./
RUN npm ci

# Rebuild the source code only when needed
FROM base as builder
ARG APP_NAME
WORKDIR /app

# Copy node_modules from deps
COPY --from=deps /app/node_modules ./node_modules

# Copy app source
COPY web/${APP_NAME} ./

# Copy shared lib if it exists
COPY web/lib ../lib 2>/dev/null || true

# Set production env
ENV NEXT_TELEMETRY_DISABLED 1
ENV NODE_ENV production

# Build the app
RUN npm run build

# Production image
FROM base as runner
WORKDIR /app

ARG APP_NAME
ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy necessary files
COPY --from=builder /app/public ./public 2>/dev/null || true
COPY --from=builder /app/next.config.mjs ./

# Copy built Next.js files
COPY --from=builder --chown=nextjs:nodejs /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json

USER nextjs

EXPOSE 3000

ENV PORT 3000
ENV HOSTNAME "0.0.0.0"

CMD ["npm", "start"]
